ðŸ”¹ Assumptions in V1
Market & Data Assumptions
âœ… Candle-Based Execution:

Trades are executed only after a candle is completed (no intra-candle execution).

Entry and exit occur at the candleâ€™s open price after a signal is generated.

âœ… Historical Data Format:

Data is stored as 5-minute OHLC candles in CSV files under src/data/historical/{currency_pair}.csv.

We assume clean, preprocessed data (no missing values, gaps, or outliers).

âœ… Spread is Fixed:

A constant spread (e.g., 0.1 pips) is applied to all trades. No slippage or commissions for now.

âœ… Only Market Orders:

No pending orders (e.g., limit or stop orders). Only market execution after signal confirmation.

Trading & Risk Management Assumptions
âœ… One Trade Per Signal:

No simultaneous long and short positions. Each signal results in one trade.

âœ… Full Position Close at TP or SL:

When a take-profit (TP) or stop-loss (SL) is hit, the full position is closed. No partial exits or trailing stops in V1.

âœ… Position Sizing is Handled by Strategy:

Strategy defines position size based on a fixed percentage of capital (risk_per_trade).

No external risk model; risk-adjusted sizing is strategy-dependent.

âœ… Capital is Tracked But No Reinvestment Logic:

Profits/losses are accounted for, but thereâ€™s no compounding (e.g., increasing position size after wins).

ðŸ”¹ Core Functionalities in V1
ðŸ“Œ 1. Data Loading & Preprocessing
ðŸ”¹ Reads historical data from src/data/historical/{symbol}.csv.
ðŸ”¹ Converts timestamps into a unified format for multi-timeframe processing.
ðŸ”¹ Ensures data integrity before running backtest.

ðŸ“Œ 2. Strategy Execution & Signal Generation
ðŸ”¹ Calls strategy.py to compute entry & exit signals for each candle.
ðŸ”¹ Supports multi-timeframe confirmation logic (but does NOT train ML models).
ðŸ”¹ Uses the full candleâ€™s OHLC data to generate decisions.

ðŸ“Œ 3. Trade Execution & Capital Management
ðŸ”¹ Executes market orders only at candle open if a signal is valid.
ðŸ”¹ Updates account balance & equity after every trade.
ðŸ”¹ Applies fixed spread to simulate realistic market conditions.

ðŸ“Œ 4. Trade Logging & Performance Analysis
ðŸ”¹ Saves detailed trade logs in src/backtesting/{date}/{iteration}.csv.
ðŸ”¹ Computes key metrics:

Total PnL, Win Rate, Max Drawdown, Sharpe Ratio

Profit Factor, Expectancy, Average Trade Return
ðŸ”¹ Generates equity curve and basic visualizations.

ðŸ”¹ Features Delayed for Later Iterations
âœ… Multi-Asset & Multi-Timeframe Testing â†’ Pinned for later (Improvement 1)
âœ… Interactive Visualizations & Reports â†’ Pinned for later (Improvement 5)
âœ… Partial Take-Profits & Trailing Stops â†’ Will revisit later
âœ… Advanced Position Sizing (Kelly Criterion, ATR-based Sizing, etc.) â†’ Left for future iterations
âœ… Dynamic Slippage & Variable Spread Modeling â†’ Fixed spread for now

